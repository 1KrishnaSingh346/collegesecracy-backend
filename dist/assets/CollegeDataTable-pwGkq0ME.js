import{r as h,j as n}from"./index-os3KaEe5.js";import{r as y,u as j}from"./xlsx-fdabpkSu.js";const m={"College Name":"string",Branch:"string",Quota:"string","Seat Type":"string",Gender:"string","Opening Rank":"number","Closing Rank":"number"},C=()=>{const[o,l]=h.useState([]),[i,c]=h.useState(""),u=t=>{const a=t.target.files[0];if(!a)return;const e=new FileReader;e.onload=r=>{try{const s=new Uint8Array(r.target.result),d=y(s,{type:"array"}),b=d.Sheets[d.SheetNames[0]],p=j.sheet_to_json(b),g=x(p);f(g),l(g),c("")}catch(s){console.error("College data parsing failed:",s),c(s.message),l([])}},e.readAsArrayBuffer(a)},f=t=>{if(!Array.isArray(t)||t.length===0)throw new Error("No valid data found in the Excel sheet");const a=t[0];for(const[e,r]of Object.entries(m)){if(!(e in a))throw new Error(`Missing required column: ${e}`);const s=a[e];if(s!==null&&typeof s!==r)throw new Error(`Column ${e} should be of type ${r}`)}t.forEach((e,r)=>{if(e["Opening Rank"]>e["Closing Rank"])throw new Error(`Row ${r+1}: Opening Rank (${e["Opening Rank"]}) cannot be greater than Closing Rank (${e["Closing Rank"]})`)})},x=t=>t.map(a=>{const e={};for(const[r,s]of Object.entries(m))if(s==="number"){if(e[r]=Number(a[r]),isNaN(e[r]))throw new Error(`Invalid number value in ${r}: ${a[r]}`)}else if(e[r]=String(a[r]).trim(),!e[r])throw new Error(`Empty value in required column ${r}`);return e});return n.jsxs("div",{className:"p-6 bg-gray-50 min-h-screen",children:[n.jsx("h1",{className:"text-2xl font-bold mb-6 text-center text-indigo-700",children:"Upload College Data"}),n.jsx("div",{className:"mb-4 flex justify-center",children:n.jsx("input",{type:"file",accept:".xlsx, .xls",onChange:u,className:"px-4 py-2 border rounded bg-white shadow"})}),i&&n.jsx("div",{className:"text-red-600 text-center mb-4",children:i}),o.length>0&&n.jsx("div",{className:"overflow-x-auto mt-4",children:n.jsxs("table",{className:"min-w-full border border-gray-300 bg-white shadow-md rounded-lg",children:[n.jsx("thead",{className:"bg-indigo-600 text-white",children:n.jsx("tr",{children:Object.keys(o[0]).map(t=>n.jsx("th",{className:"px-4 py-2 text-left border-b border-indigo-500",children:t},t))})}),n.jsx("tbody",{children:o.map((t,a)=>n.jsx("tr",{className:"hover:bg-gray-100",children:Object.values(t).map((e,r)=>n.jsx("td",{className:"px-4 py-2 border-b border-gray-200",children:e},r))},a))})]})})]})};export{C as default};
